class Node:
    def __init__(self,data):
        self.data=data
        self.next=None

    def description(self):
        print(self.data)



class LinkedList:
    def __init__(self):
        self.head=None

    #function to insert a new node at the begining

    def push(self,new_data):
        new_node=Node(new_data)
        new_node.next=self.head
        self.head=new_node


    def reverse(self):
        prev=None
        current=self.head
        while(current is not None):
            temp= current.next
            current.next=prev
            prev=current
            current=temp
        self.head=prev

    def append(self, new_data):
        new_node=Node(new_data)
        if (self.head == None):
            self.head=new_node
            return
        last = self.head
        while(last.next is not None):
            last=last.next
        last.next=new_node

    def insertAfter(self, prev_node,new_data):
        if(prev_node == None):
            print("Not in Linked List")
            return

        new_node= Node(new_data)
        new_node.next=prev_node.next
        prev_node = new_node


    def printList(self):
        temp=self.head
        while(temp):
            print(temp.data)
            temp=temp.next


llist = LinkedList()
llist.append(6)
llist.push(7);
llist.push(1);
llist.append(4)

# Insert 8, after 7. So linked list becomes 1 -> 7-> 8-> 6-> 4-> None
llist.insertAfter(llist.head.next, 8)

print('Created linked list is: ')
llist.printList()







